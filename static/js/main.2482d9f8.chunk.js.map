{"version":3,"sources":["components/HomePage/HomePage.js","services/RegistrationService.js","components/Header/Header.js","containers/Registration/Registration.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","className","id","href","postEmployeeData","employeeId","axios","post","headers","postSeatData","seatId","Header","style","color","children","Registration","state","employeeIdValue","seatNumber","isException","formOption","submitEmployeeData","e","a","preventDefault","postRegistrationDataServiceResponse","console","log","setState","submitSeatData","data","onSubmit","this","type","placeholder","onChange","target","value","marginTop","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","renderEmployeeForm","renderSeatForm","renderExceptionMessage","React","Component","AppRoute","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2482d9f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HomePage.css';\r\n\r\nfunction HomePage(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/registration\">Registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/seatinfo\">Seating Info</a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {/* <div style={{verticalAlign:'center'}}> */}\r\n            <label className=\"HomePageLayout\"><h1>Welcome to Agile Workspace</h1></label>\r\n            {/* </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage;","import axios from \"axios\";\r\n\r\nexport function postEmployeeData(employeeId){\r\n\r\n    const url=\"http://www.mocky.io/v2/5e536b302e0000b50c2dab0a\";\r\n    return axios.post(url,{employeeId:employeeId},{ headers: { 'Content-Type': 'application/json' }});\r\n}\r\nexport function postSeatData(seatId){\r\n    const url=\"http://www.mocky.io/v2/5e536b302e0000b50c2dab0a\";\r\n    return axios.post(url,{seatId:seatId},{ headers: { 'Content-Type': 'application/json' }});\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row HeaderLabel\">\r\n                <div className=\"col-sm\">\r\n                <label style={{color:'#064157'}}><h3>Agile Workspace</h3></label>   \r\n                    </div>                          \r\n            </div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport './Registration.css'\r\nimport { postEmployeeData } from '../../services/RegistrationService';\r\nimport { postSeatData } from '../../services/RegistrationService';\r\nimport Header from '../../components/Header/Header';\r\n\r\n\r\nclass Registration extends React.Component{\r\n    state={\r\n        employeeIdValue:\"\",\r\n        seatNumber:\"\",\r\n        isException:false,\r\n        formOption:\"\"\r\n    }\r\n\r\n    submitEmployeeData = async (e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            \r\n            const postRegistrationDataServiceResponse = await postEmployeeData(this.state.employeeIdValue);\r\n            console.log(postRegistrationDataServiceResponse)\r\n            console.log(\"Inside\")\r\n        }\r\n        catch(ex){\r\n            this.setState({isException:true});\r\n            console.log(\"Exception in postRegistrationDataServiceResponse\")\r\n        }\r\n    }\r\n    submitSeatData = async (e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            \r\n            const postRegistrationDataServiceResponse = await postSeatData(this.state.seatNumber);\r\n            console.log(postRegistrationDataServiceResponse.data)\r\n            console.log(\"Inside\")\r\n        }\r\n        catch(ex){\r\n            this.setState({isException:true});\r\n            console.log(\"Exception in postRegistrationDataServiceResponse\")\r\n        }\r\n    }\r\n\r\n    renderExceptionMessage(){\r\n        return(\r\n            <div>\r\n                <h5>Something happened.Please try again later</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderEmployeeForm(){\r\n        return(\r\n        <>\r\n        <form onSubmit={this.submitEmployeeData}>\r\n                  <div className=\"row registrationFormLayout\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"form-group col-sm-3\">\r\n                        <label><strong>Employee id</strong></label>\r\n                        <input type=\"text\"\r\n                        className=\"form-control\" \r\n                        id=\"employeeIdTextBox\" \r\n                        placeholder=\"BNumber\"   \r\n                        onChange={e=>this.setState({employeeIdValue:e.target.value})}></input>\r\n                    </div>\r\n                    <div className=\"col-sm-3\">                        \r\n                    </div>\r\n                  </div>                  \r\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>                    \r\n        </form>\r\n        </>\r\n        )\r\n    }\r\n    renderSeatForm(){\r\n        return(\r\n        <>\r\n        <form onSubmit={this.submitSeatData}>\r\n                  <div className=\"row registrationFormLayout\">\r\n                  <div className=\"col-sm-4\">\r\n                  </div>                    \r\n                    <div className=\"form-group col-sm-3\">\r\n                        <label><strong>Seat Number</strong></label>\r\n                        <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"seatNumberTextBox\" \r\n                        placeholder=\"Seat Number\"\r\n                        onChange={e=>this.setState({seatNumber:e.target.value})}></input>\r\n                    </div>                    \r\n                  </div>                  \r\n                  <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n        </>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.employeeIdValue);\r\n        console.log(this.state.seatNumber);\r\n        console.log(this.state.formOption)\r\n\r\n        return(\r\n            <Header>\r\n            <div style={{marginTop:40}}>\r\n              <div className=\"dropdown\">\r\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Choose your Option\r\n                </button> <br/> <br/>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <button className=\"dropdown-item\" onClick={()=>this.setState({formOption:1})}>Add Employee</button>\r\n                    <button className=\"dropdown-item\" onClick={()=>this.setState({formOption:2})}>Add Seat</button>\r\n                </div>\r\n                </div>\r\n                {\r\n                    this.state.formOption === 1?this.renderEmployeeForm()   :(this.state.formOption === 2)?this.renderSeatForm():null\r\n                }\r\n              <br/> \r\n              {\r\n              this.state.isException && this.renderExceptionMessage()       \r\n              }    \r\n            </div>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\nexport default Registration;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from './components/HomePage/HomePage';\r\nimport Registration from './containers/Registration/Registration';\r\nfunction AppRoute(props){\r\n    return(\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/registration\" component={Registration} />\r\n                {/* <Route path=\"/infinitescroll\" component={InfiniteList} />\r\n                <Route path=\"/cart\" component={Cart} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/checkout/:id\" component={Checkout} />\r\n                <Route component={ErrorPage} /> */}\r\n            </Switch>\r\n      </>\r\n    )\r\n\r\n}\r\nexport default AppRoute;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRoute from './Routes';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <AppRoute/>\r\n      </div>\r\n    </BrowserRouter>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}