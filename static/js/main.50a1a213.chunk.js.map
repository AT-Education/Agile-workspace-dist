{"version":3,"sources":["components/Header/Header.js","components/HomePage/HomePage.js","services/RegistrationService.js","containers/Registration/Registration.js","containers/SeatInfo/SeatInfo.js","services/SeatInfoService.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","id","href","children","HomePage","postEmployeeData","employeeId","axios","post","Name","headers","postSeatData","seatId","Registration","state","employeeIdValue","seatNumber","isException","formOption","submitEmployeeData","e","a","preventDefault","postRegistrationDataServiceResponse","setState","console","log","submitSeatData","data","onSubmit","this","style","marginTop","marginLeft","textAlign","type","placeholder","width","onChange","target","value","float","isActive","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","renderEmployeeForm","renderSeatForm","renderExceptionMessage","React","Component","SeatInfo","seatInfoList","get","seatInfoServiceResponse","length","scope","map","item","key","name","AppRoute","path","component","exact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50a1a213.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props){\r\n    return(\r\n        <div className=\"container\">\r\n            {/* <div className=\"row HeaderLabel\">\r\n                <div className=\"col-sm\">\r\n                <label style={{color:'#064157'}}><h3>Agile Workspace</h3></label>   \r\n                    </div>                          \r\n            </div> */}\r\n            <nav className=\"navbar navbar-expand-lg navbar navbar-light\" >\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/registration\">Registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/seatinfo\">Seating Info</a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport './HomePage.css';\r\nimport Header from '../Header/Header';\r\n\r\nfunction HomePage(props){\r\n    return(\r\n        <div>\r\n            {/* <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/registration\">Registration</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/seatinfo\">Seating Info</a>\r\n                    </li>\r\n                    </ul>\r\n                </div>\r\n            </nav> */}\r\n            <Header>\r\n            {/* <div style={{verticalAlign:'center'}}> */}\r\n            <label className=\"HomePageLayout\"><h1>Welcome to Agile Workspace</h1></label>\r\n            </Header>\r\n            {/* </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default HomePage;","import axios from \"axios\";\r\n\r\nexport function postEmployeeData(employeeId){\r\n\r\n    const url=\"https://agileworkspace-backend.azurewebsites.net/api/Registration/employee\";\r\n    return axios.post(url,{Name:employeeId},{ headers: { 'Content-Type': 'application/json' }});\r\n}\r\nexport function postSeatData(seatId){\r\n    const url=\"https://agileworkspace-backend.azurewebsites.net/api/Registration/seat\";\r\n    return axios.post(url,{Name:seatId},{ headers: { 'Content-Type': 'application/json' }});\r\n}","import React from 'react';\r\nimport './Registration.css'\r\nimport { postEmployeeData } from '../../services/RegistrationService';\r\nimport { postSeatData } from '../../services/RegistrationService';\r\nimport Header from '../../components/Header/Header';\r\n\r\n\r\nclass Registration extends React.Component{\r\n    state={\r\n        employeeIdValue:\"\",\r\n        seatNumber:\"\",\r\n        isException:false,\r\n        formOption:\"\"\r\n    }\r\n\r\n    submitEmployeeData = async (e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            \r\n            const postRegistrationDataServiceResponse = await postEmployeeData(this.state.employeeIdValue);\r\n            this.setState({employeeIdValue:\"\"});\r\n            console.log(postRegistrationDataServiceResponse)\r\n            console.log(\"Inside\")\r\n            console.log(\"changed\",this.state.employeeIdValue);\r\n        }\r\n        catch(ex){\r\n            this.setState({isException:true});\r\n            console.log(\"Exception in postRegistrationDataServiceResponse\")\r\n        }\r\n    }\r\n    submitSeatData = async (e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            \r\n            const postRegistrationDataServiceResponse = await postSeatData(this.state.seatNumber);\r\n            this.setState({seatNumber:\"\"});\r\n            console.log(postRegistrationDataServiceResponse.data)\r\n            console.log(\"Inside\")\r\n        }\r\n        catch(ex){\r\n            this.setState({isException:true});\r\n            console.log(\"Exception in postRegistrationDataServiceResponse\")\r\n        }\r\n    }\r\n\r\n    renderExceptionMessage(){\r\n        return(\r\n            <div>\r\n                <h5>Something happened.Please try again later</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderEmployeeForm(){\r\n        return(\r\n        <form onSubmit={this.submitEmployeeData}>\r\n                  <div className=\"row registrationFormLayout\"  style={{marginTop:40}}>\r\n                    <div className=\"col-sm-3\"/>\r\n                    <div className=\"col-sm-5\" style={{marginLeft:100}}>\r\n                            <div className=\"col-sm-4\" style={{textAlign:\"center\"}}>\r\n                                <label><b>Employee id</b></label>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"employeeIdTextBox\" \r\n                                placeholder=\"BNumber\"\r\n                                style = {{width: 225}}\r\n                                onChange={e=>this.setState({employeeIdValue:e.target.value})}\r\n                                ></input>\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                    </div>\r\n                    <div className=\"col-sm-3\"></div>\r\n                  </div>\r\n                  <div className=\"row registrationButtonLayout\">\r\n                    <div className=\"col-sm-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                  </div>\r\n        </form>\r\n        )\r\n    }\r\n    renderSeatForm(){\r\n        return(\r\n        <form onSubmit={this.submitSeatData} style={{marginTop:40}}>\r\n                    <div className=\"row registrationFormLayout\">\r\n                        <div className=\"col-sm-3\"/>\r\n                                <div className=\"col-sm-5\" style={{marginLeft:100}}>\r\n                                    <div className=\"col-sm-4\">\r\n                                        <label style={{float:\"center\"}}><strong>Seat Number</strong></label>\r\n                                    </div>\r\n                                    <div className=\"col-sm-3\">\r\n                                        <input type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        id=\"seatNumberTextBox\" \r\n                                        placeholder=\"Seat Number\"\r\n                                        style = {{width: 225}}\r\n                                        onChange={e=>this.setState({seatNumber:e.target.value})}></input>\r\n                                    </div>\r\n                                </div>\r\n                        <div className=\"col-sm-3\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"row registrationButtonLayout\">\r\n                    <div className=\"col-sm-12\">\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                  </div>\r\n                            \r\n                    \r\n        </form>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.employeeIdValue);\r\n        console.log(this.state.seatNumber);\r\n        console.log(this.state.formOption)\r\n\r\n        return(\r\n            <Header isActive={true}>\r\n            <div style={{marginTop:40}}>\r\n              <label><h3>Registration</h3></label>  \r\n              <div className=\"dropdown\">\r\n                <button className=\"btn btn-secondary dropdown-toggle\" style={{width:225}} type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    Choose your Option\r\n                </button>\r\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    <button className=\"dropdown-item\" onClick={()=>this.setState({formOption:1})}>Add Employee</button>\r\n                    <button className=\"dropdown-item\" onClick={()=>this.setState({formOption:2})}>Add Seat</button>\r\n                </div>\r\n              </div>\r\n                {\r\n                    this.state.formOption === 1?this.renderEmployeeForm()   :(this.state.formOption === 2)?this.renderSeatForm():null\r\n                }\r\n              <br/> \r\n              {\r\n              this.state.isException && this.renderExceptionMessage()       \r\n              }    \r\n            </div>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\nexport default Registration;","import React from 'react';\r\nimport { fetchSeatInfo } from '../../services/SeatInfoService';\r\nimport Header from '../../components/Header/Header';\r\n\r\nclass SeatInfo extends React.Component{\r\n    state = {\r\n        seatInfoList:[]\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n        const seatInfoServiceResponse = await fetchSeatInfo();\r\n        console.log(seatInfoServiceResponse.data);\r\n        this.setState({seatInfoList:seatInfoServiceResponse.data})\r\n        }catch(err){\r\n            console.log(\"Exception in fetchSeatInfo service\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {seatInfoList} = this.state;\r\n        return(\r\n            <Header>\r\n            {\r\n                seatInfoList.length > 0?(\r\n                    <table className=\"table table-hover\" style={{marginTop:40}}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Employee Name</th>\r\n                                <th scope=\"col\">Seat Number</th>\r\n                            </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {\r\n                            seatInfoList.map(item=>(\r\n                                    <tr key={item.employeeId}>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.seatId}</td>\r\n                                    </tr>                        \r\n                            ))\r\n                            }\r\n                            </tbody>         \r\n                    </table>\r\n                ):null\r\n            }\r\n            </Header>\r\n        )\r\n    }\r\n}\r\nexport default SeatInfo;","import axios from \"axios\";\r\n\r\nexport function fetchSeatInfo(){\r\n    const url = \"https://agileworkspace-backend.azurewebsites.net/api/SeatAllocation\";\r\n    return axios.get(url);\r\n}","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport HomePage from './components/HomePage/HomePage';\r\nimport Registration from './containers/Registration/Registration';\r\nimport SeatInfo from './containers/SeatInfo/SeatInfo';\r\nfunction AppRoute(props){\r\n    return(\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" component={HomePage} exact />\r\n                <Route path=\"/registration\" component={Registration} />\r\n                <Route path=\"/seatinfo\" component={SeatInfo} />\r\n                {/* <Route path=\"/infinitescroll\" component={InfiniteList} />\r\n                <Route path=\"/cart\" component={Cart} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <PrivateRoute path=\"/checkout/:id\" component={Checkout} />\r\n                <Route component={ErrorPage} /> */}\r\n            </Switch>\r\n      </>\r\n    )\r\n\r\n}\r\nexport default AppRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRoute from './Routes';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <AppRoute/>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}